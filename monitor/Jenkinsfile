pipeline {
    agent any

    environment {
        PRIVATE_KEY = credentials('jenkins_node')
    }

    stages {
        stage('Git checkout monitor sourecode') {
            steps{
                // Get source code from a GitHub repository
                
                git branch:'monitor-ansible', credentialsId:'jenkins_node', url:'git@github.com:DevOpsTechscrum/Devops.git'
            
            }
        }
        // run docker
        stage('Install docker via Ansible') {
            steps{
                dir("./monitor/ansible-playbook/ansible-playbook-plain") {
                    ansiblePlaybook (credentialsId: 'monitor-ec2-key', inventory: '../inventory.aws_ec2.yaml', playbook: './docker.yaml')
                }
            }
        }
        
        stage('Ansible Checkout code on EC2') {
            steps{
                dir("./monitor/ansible-playbook/ansible-playbook-plain") {
                withCredentials([sshUserPrivateKey(credentialsId: 'jenkins_node', keyFileVariable: 'SSH_KEY')]) {
                //sh 'export GIT_SSH_COMMAND="ssh -i $SSH_KEY"'
                ansiblePlaybook (credentialsId: 'monitor-ec2-key', inventory: '../inventory.aws_ec2.yaml', playbook: './git.yaml', extraVars: [private_key_content: readFile(SSH_KEY)])
                }
            }
            }
    }

        stage('Run yace via Ansible') {
            steps{
                dir("./monitor/ansible-playbook/ansible-playbook-plain") {
                withCredentials([aws(credentialsId: 'jenkins_aws', accessKeyVariable: 'AWS_ACCESSKEY', secretKeyVariable: 'AWS_SECKEY')]) {
                //sh 'export GIT_SSH_COMMAND="ssh -i $SSH_KEY"'
                ansiblePlaybook (credentialsId: 'monitor-ec2-key', inventory: '../inventory.aws_ec2.yaml', playbook: './yace-docker-run.yaml', extraVars: [accessKey: AWS_ACCESSKEY, accessSecretKey: AWS_SECKEY])
                }
                }
            }
        }


        // stage('run yace'){
        //     steps{
        //         dir("./ansible-playbook"){
        //         withAWS(region:"ap-southeast-2", credentials:"jenkins_aws"){
        //             // s3Delete(bucket: "${env.UATS3BucketName}", path:'**/*')
        //             s3Upload(bucket: "techscrum-linda-frontend", workingDir:'build', includePathPattern:'**/*');
        //             }
        //         } 
        //     }   
        // }
    }
}
